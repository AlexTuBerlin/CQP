{
  "version": 3,
  "sources": ["../popper.js/src/utils/isBrowser.js", "../popper.js/src/utils/debounce.js", "../popper.js/src/utils/isFunction.js", "../popper.js/src/utils/getStyleComputedProperty.js", "../popper.js/src/utils/getParentNode.js", "../popper.js/src/utils/getScrollParent.js", "../popper.js/src/utils/getReferenceNode.js", "../popper.js/src/utils/isIE.js", "../popper.js/src/utils/getOffsetParent.js", "../popper.js/src/utils/isOffsetContainer.js", "../popper.js/src/utils/getRoot.js", "../popper.js/src/utils/findCommonOffsetParent.js", "../popper.js/src/utils/getScroll.js", "../popper.js/src/utils/includeScroll.js", "../popper.js/src/utils/getBordersSize.js", "../popper.js/src/utils/getWindowSizes.js", "../popper.js/src/utils/getClientRect.js", "../popper.js/src/utils/getBoundingClientRect.js", "../popper.js/src/utils/getOffsetRectRelativeToArbitraryNode.js", "../popper.js/src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js", "../popper.js/src/utils/isFixed.js", "../popper.js/src/utils/getFixedPositionOffsetParent.js", "../popper.js/src/utils/getBoundaries.js", "../popper.js/src/utils/computeAutoPlacement.js", "../popper.js/src/utils/getReferenceOffsets.js", "../popper.js/src/utils/getOuterSizes.js", "../popper.js/src/utils/getOppositePlacement.js", "../popper.js/src/utils/getPopperOffsets.js", "../popper.js/src/utils/find.js", "../popper.js/src/utils/findIndex.js", "../popper.js/src/utils/runModifiers.js", "../popper.js/src/methods/update.js", "../popper.js/src/utils/isModifierEnabled.js", "../popper.js/src/utils/getSupportedPropertyName.js", "../popper.js/src/methods/destroy.js", "../popper.js/src/utils/getWindow.js", "../popper.js/src/utils/setupEventListeners.js", "../popper.js/src/methods/enableEventListeners.js", "../popper.js/src/utils/removeEventListeners.js", "../popper.js/src/methods/disableEventListeners.js", "../popper.js/src/utils/isNumeric.js", "../popper.js/src/utils/setStyles.js", "../popper.js/src/utils/setAttributes.js", "../popper.js/src/modifiers/applyStyle.js", "../popper.js/src/utils/getRoundedOffsets.js", "../popper.js/src/modifiers/computeStyle.js", "../popper.js/src/utils/isModifierRequired.js", "../popper.js/src/modifiers/arrow.js", "../popper.js/src/utils/getOppositeVariation.js", "../popper.js/src/methods/placements.js", "../popper.js/src/utils/clockwise.js", "../popper.js/src/modifiers/flip.js", "../popper.js/src/modifiers/keepTogether.js", "../popper.js/src/modifiers/offset.js", "../popper.js/src/modifiers/preventOverflow.js", "../popper.js/src/modifiers/shift.js", "../popper.js/src/modifiers/hide.js", "../popper.js/src/modifiers/inner.js", "../popper.js/src/modifiers/index.js", "../popper.js/src/methods/defaults.js", "../popper.js/src/index.js", "../bootstrap/js/src/tools/sanitizer.js", "../bootstrap/js/src/tooltip.js", "../bootstrap/js/src/popover.js", "dep:bootstrap_js_dist_popover"],
  "sourcesContent": ["export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n", "import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n", "/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n", "/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n", "/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n", "import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n", "/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n", "import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n", "import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n", "import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n", "/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n", "import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n", "/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n", "import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n", "/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n", "import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n", "/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n", "import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n", "import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n", "import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n", "import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n", "import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n", "import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n", "import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n", "import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n", "/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n", "/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n", "import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n", "/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n", "import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n", "import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n", "import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n", "/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n", "/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n", "import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n", "/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n", "import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n", "import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n", "import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n", "import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n", "/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n", "import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n", "/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n", "import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n", "/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n", "import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n", "import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n", "import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n", "/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n", "/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n", "import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n", "import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n", "/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n", "import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n", "import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n", "/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n", "import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n", "import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n", "import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" \u2014 or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n", "import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n", "// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n", "/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): tools/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst uriAttrs = [\n  'background',\n  'cite',\n  'href',\n  'itemtype',\n  'longdesc',\n  'poster',\n  'src',\n  'xlink:href'\n]\n\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i\n\nexport const DefaultWhitelist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  div: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n}\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi\n\n/**\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[\\d+/a-z]+=*$/i\n\nfunction allowedAttribute(attr, allowedAttributeList) {\n  const attrName = attr.nodeName.toLowerCase()\n\n  if (allowedAttributeList.indexOf(attrName) !== -1) {\n    if (uriAttrs.indexOf(attrName) !== -1) {\n      return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\n    }\n\n    return true\n  }\n\n  const regExp = allowedAttributeList.filter(attrRegex => attrRegex instanceof RegExp)\n\n  // Check if a regular expression validates the attribute.\n  for (let i = 0, len = regExp.length; i < len; i++) {\n    if (attrName.match(regExp[i])) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {\n  if (unsafeHtml.length === 0) {\n    return unsafeHtml\n  }\n\n  if (sanitizeFn && typeof sanitizeFn === 'function') {\n    return sanitizeFn(unsafeHtml)\n  }\n\n  const domParser = new window.DOMParser()\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html')\n  const whitelistKeys = Object.keys(whiteList)\n  const elements = [].slice.call(createdDocument.body.querySelectorAll('*'))\n\n  for (let i = 0, len = elements.length; i < len; i++) {\n    const el = elements[i]\n    const elName = el.nodeName.toLowerCase()\n\n    if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {\n      el.parentNode.removeChild(el)\n\n      continue\n    }\n\n    const attributeList = [].slice.call(el.attributes)\n    const whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || [])\n\n    attributeList.forEach(attr => {\n      if (!allowedAttribute(attr, whitelistedAttributes)) {\n        el.removeAttribute(attr.nodeName)\n      }\n    })\n  }\n\n  return createdDocument.body.innerHTML\n}\n", "/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  DefaultWhitelist,\n  sanitizeHtml\n} from './tools/sanitizer'\nimport $ from 'jquery'\nimport Popper from 'popper.js'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'tooltip'\nconst VERSION = '4.6.0'\nconst DATA_KEY = 'bs.tooltip'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst CLASS_PREFIX = 'bs-tooltip'\nconst BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\nconst DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn']\n\nconst DefaultType = {\n  animation: 'boolean',\n  template: 'string',\n  title: '(string|element|function)',\n  trigger: 'string',\n  delay: '(number|object)',\n  html: 'boolean',\n  selector: '(string|boolean)',\n  placement: '(string|function)',\n  offset: '(number|string|function)',\n  container: '(string|element|boolean)',\n  fallbackPlacement: '(string|array)',\n  boundary: '(string|element)',\n  customClass: '(string|function)',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  whiteList: 'object',\n  popperConfig: '(null|object)'\n}\n\nconst AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: 'right',\n  BOTTOM: 'bottom',\n  LEFT: 'left'\n}\n\nconst Default = {\n  animation: true,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' +\n                    '<div class=\"arrow\"></div>' +\n                    '<div class=\"tooltip-inner\"></div></div>',\n  trigger: 'hover focus',\n  title: '',\n  delay: 0,\n  html: false,\n  selector: false,\n  placement: 'top',\n  offset: 0,\n  container: false,\n  fallbackPlacement: 'flip',\n  boundary: 'scrollParent',\n  customClass: '',\n  sanitize: true,\n  sanitizeFn: null,\n  whiteList: DefaultWhitelist,\n  popperConfig: null\n}\n\nconst HOVER_STATE_SHOW = 'show'\nconst HOVER_STATE_OUT = 'out'\n\nconst Event = {\n  HIDE: `hide${EVENT_KEY}`,\n  HIDDEN: `hidden${EVENT_KEY}`,\n  SHOW: `show${EVENT_KEY}`,\n  SHOWN: `shown${EVENT_KEY}`,\n  INSERTED: `inserted${EVENT_KEY}`,\n  CLICK: `click${EVENT_KEY}`,\n  FOCUSIN: `focusin${EVENT_KEY}`,\n  FOCUSOUT: `focusout${EVENT_KEY}`,\n  MOUSEENTER: `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE: `mouseleave${EVENT_KEY}`\n}\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\nconst SELECTOR_TOOLTIP_INNER = '.tooltip-inner'\nconst SELECTOR_ARROW = '.arrow'\n\nconst TRIGGER_HOVER = 'hover'\nconst TRIGGER_FOCUS = 'focus'\nconst TRIGGER_CLICK = 'click'\nconst TRIGGER_MANUAL = 'manual'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Tooltip {\n  constructor(element, config) {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org)')\n    }\n\n    // private\n    this._isEnabled = true\n    this._timeout = 0\n    this._hoverState = ''\n    this._activeTrigger = {}\n    this._popper = null\n\n    // Protected\n    this.element = element\n    this.config = this._getConfig(config)\n    this.tip = null\n\n    this._setListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Public\n\n  enable() {\n    this._isEnabled = true\n  }\n\n  disable() {\n    this._isEnabled = false\n  }\n\n  toggleEnabled() {\n    this._isEnabled = !this._isEnabled\n  }\n\n  toggle(event) {\n    if (!this._isEnabled) {\n      return\n    }\n\n    if (event) {\n      const dataKey = this.constructor.DATA_KEY\n      let context = $(event.currentTarget).data(dataKey)\n\n      if (!context) {\n        context = new this.constructor(\n          event.currentTarget,\n          this._getDelegateConfig()\n        )\n        $(event.currentTarget).data(dataKey, context)\n      }\n\n      context._activeTrigger.click = !context._activeTrigger.click\n\n      if (context._isWithActiveTrigger()) {\n        context._enter(null, context)\n      } else {\n        context._leave(null, context)\n      }\n    } else {\n      if ($(this.getTipElement()).hasClass(CLASS_NAME_SHOW)) {\n        this._leave(null, this)\n        return\n      }\n\n      this._enter(null, this)\n    }\n  }\n\n  dispose() {\n    clearTimeout(this._timeout)\n\n    $.removeData(this.element, this.constructor.DATA_KEY)\n\n    $(this.element).off(this.constructor.EVENT_KEY)\n    $(this.element).closest('.modal').off('hide.bs.modal', this._hideModalHandler)\n\n    if (this.tip) {\n      $(this.tip).remove()\n    }\n\n    this._isEnabled = null\n    this._timeout = null\n    this._hoverState = null\n    this._activeTrigger = null\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    this._popper = null\n    this.element = null\n    this.config = null\n    this.tip = null\n  }\n\n  show() {\n    if ($(this.element).css('display') === 'none') {\n      throw new Error('Please use show on visible elements')\n    }\n\n    const showEvent = $.Event(this.constructor.Event.SHOW)\n    if (this.isWithContent() && this._isEnabled) {\n      $(this.element).trigger(showEvent)\n\n      const shadowRoot = Util.findShadowRoot(this.element)\n      const isInTheDom = $.contains(\n        shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement,\n        this.element\n      )\n\n      if (showEvent.isDefaultPrevented() || !isInTheDom) {\n        return\n      }\n\n      const tip = this.getTipElement()\n      const tipId = Util.getUID(this.constructor.NAME)\n\n      tip.setAttribute('id', tipId)\n      this.element.setAttribute('aria-describedby', tipId)\n\n      this.setContent()\n\n      if (this.config.animation) {\n        $(tip).addClass(CLASS_NAME_FADE)\n      }\n\n      const placement = typeof this.config.placement === 'function' ?\n        this.config.placement.call(this, tip, this.element) :\n        this.config.placement\n\n      const attachment = this._getAttachment(placement)\n      this.addAttachmentClass(attachment)\n\n      const container = this._getContainer()\n      $(tip).data(this.constructor.DATA_KEY, this)\n\n      if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {\n        $(tip).appendTo(container)\n      }\n\n      $(this.element).trigger(this.constructor.Event.INSERTED)\n\n      this._popper = new Popper(this.element, tip, this._getPopperConfig(attachment))\n\n      $(tip).addClass(CLASS_NAME_SHOW)\n      $(tip).addClass(this.config.customClass)\n\n      // If this is a touch-enabled device we add extra\n      // empty mouseover listeners to the body's immediate children;\n      // only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        $(document.body).children().on('mouseover', null, $.noop)\n      }\n\n      const complete = () => {\n        if (this.config.animation) {\n          this._fixTransition()\n        }\n\n        const prevHoverState = this._hoverState\n        this._hoverState = null\n\n        $(this.element).trigger(this.constructor.Event.SHOWN)\n\n        if (prevHoverState === HOVER_STATE_OUT) {\n          this._leave(null, this)\n        }\n      }\n\n      if ($(this.tip).hasClass(CLASS_NAME_FADE)) {\n        const transitionDuration = Util.getTransitionDurationFromElement(this.tip)\n\n        $(this.tip)\n          .one(Util.TRANSITION_END, complete)\n          .emulateTransitionEnd(transitionDuration)\n      } else {\n        complete()\n      }\n    }\n  }\n\n  hide(callback) {\n    const tip = this.getTipElement()\n    const hideEvent = $.Event(this.constructor.Event.HIDE)\n    const complete = () => {\n      if (this._hoverState !== HOVER_STATE_SHOW && tip.parentNode) {\n        tip.parentNode.removeChild(tip)\n      }\n\n      this._cleanTipClass()\n      this.element.removeAttribute('aria-describedby')\n      $(this.element).trigger(this.constructor.Event.HIDDEN)\n      if (this._popper !== null) {\n        this._popper.destroy()\n      }\n\n      if (callback) {\n        callback()\n      }\n    }\n\n    $(this.element).trigger(hideEvent)\n\n    if (hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    $(tip).removeClass(CLASS_NAME_SHOW)\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      $(document.body).children().off('mouseover', null, $.noop)\n    }\n\n    this._activeTrigger[TRIGGER_CLICK] = false\n    this._activeTrigger[TRIGGER_FOCUS] = false\n    this._activeTrigger[TRIGGER_HOVER] = false\n\n    if ($(this.tip).hasClass(CLASS_NAME_FADE)) {\n      const transitionDuration = Util.getTransitionDurationFromElement(tip)\n\n      $(tip)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      complete()\n    }\n\n    this._hoverState = ''\n  }\n\n  update() {\n    if (this._popper !== null) {\n      this._popper.scheduleUpdate()\n    }\n  }\n\n  // Protected\n\n  isWithContent() {\n    return Boolean(this.getTitle())\n  }\n\n  addAttachmentClass(attachment) {\n    $(this.getTipElement()).addClass(`${CLASS_PREFIX}-${attachment}`)\n  }\n\n  getTipElement() {\n    this.tip = this.tip || $(this.config.template)[0]\n    return this.tip\n  }\n\n  setContent() {\n    const tip = this.getTipElement()\n    this.setElementContent($(tip.querySelectorAll(SELECTOR_TOOLTIP_INNER)), this.getTitle())\n    $(tip).removeClass(`${CLASS_NAME_FADE} ${CLASS_NAME_SHOW}`)\n  }\n\n  setElementContent($element, content) {\n    if (typeof content === 'object' && (content.nodeType || content.jquery)) {\n      // Content is a DOM node or a jQuery\n      if (this.config.html) {\n        if (!$(content).parent().is($element)) {\n          $element.empty().append(content)\n        }\n      } else {\n        $element.text($(content).text())\n      }\n\n      return\n    }\n\n    if (this.config.html) {\n      if (this.config.sanitize) {\n        content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn)\n      }\n\n      $element.html(content)\n    } else {\n      $element.text(content)\n    }\n  }\n\n  getTitle() {\n    let title = this.element.getAttribute('data-original-title')\n\n    if (!title) {\n      title = typeof this.config.title === 'function' ?\n        this.config.title.call(this.element) :\n        this.config.title\n    }\n\n    return title\n  }\n\n  // Private\n\n  _getPopperConfig(attachment) {\n    const defaultBsConfig = {\n      placement: attachment,\n      modifiers: {\n        offset: this._getOffset(),\n        flip: {\n          behavior: this.config.fallbackPlacement\n        },\n        arrow: {\n          element: SELECTOR_ARROW\n        },\n        preventOverflow: {\n          boundariesElement: this.config.boundary\n        }\n      },\n      onCreate: data => {\n        if (data.originalPlacement !== data.placement) {\n          this._handlePopperPlacementChange(data)\n        }\n      },\n      onUpdate: data => this._handlePopperPlacementChange(data)\n    }\n\n    return {\n      ...defaultBsConfig,\n      ...this.config.popperConfig\n    }\n  }\n\n  _getOffset() {\n    const offset = {}\n\n    if (typeof this.config.offset === 'function') {\n      offset.fn = data => {\n        data.offsets = {\n          ...data.offsets,\n          ...(this.config.offset(data.offsets, this.element) || {})\n        }\n\n        return data\n      }\n    } else {\n      offset.offset = this.config.offset\n    }\n\n    return offset\n  }\n\n  _getContainer() {\n    if (this.config.container === false) {\n      return document.body\n    }\n\n    if (Util.isElement(this.config.container)) {\n      return $(this.config.container)\n    }\n\n    return $(document).find(this.config.container)\n  }\n\n  _getAttachment(placement) {\n    return AttachmentMap[placement.toUpperCase()]\n  }\n\n  _setListeners() {\n    const triggers = this.config.trigger.split(' ')\n\n    triggers.forEach(trigger => {\n      if (trigger === 'click') {\n        $(this.element).on(\n          this.constructor.Event.CLICK,\n          this.config.selector,\n          event => this.toggle(event)\n        )\n      } else if (trigger !== TRIGGER_MANUAL) {\n        const eventIn = trigger === TRIGGER_HOVER ?\n          this.constructor.Event.MOUSEENTER :\n          this.constructor.Event.FOCUSIN\n        const eventOut = trigger === TRIGGER_HOVER ?\n          this.constructor.Event.MOUSELEAVE :\n          this.constructor.Event.FOCUSOUT\n\n        $(this.element)\n          .on(eventIn, this.config.selector, event => this._enter(event))\n          .on(eventOut, this.config.selector, event => this._leave(event))\n      }\n    })\n\n    this._hideModalHandler = () => {\n      if (this.element) {\n        this.hide()\n      }\n    }\n\n    $(this.element).closest('.modal').on('hide.bs.modal', this._hideModalHandler)\n\n    if (this.config.selector) {\n      this.config = {\n        ...this.config,\n        trigger: 'manual',\n        selector: ''\n      }\n    } else {\n      this._fixTitle()\n    }\n  }\n\n  _fixTitle() {\n    const titleType = typeof this.element.getAttribute('data-original-title')\n\n    if (this.element.getAttribute('title') || titleType !== 'string') {\n      this.element.setAttribute(\n        'data-original-title',\n        this.element.getAttribute('title') || ''\n      )\n\n      this.element.setAttribute('title', '')\n    }\n  }\n\n  _enter(event, context) {\n    const dataKey = this.constructor.DATA_KEY\n    context = context || $(event.currentTarget).data(dataKey)\n\n    if (!context) {\n      context = new this.constructor(\n        event.currentTarget,\n        this._getDelegateConfig()\n      )\n      $(event.currentTarget).data(dataKey, context)\n    }\n\n    if (event) {\n      context._activeTrigger[\n        event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER\n      ] = true\n    }\n\n    if ($(context.getTipElement()).hasClass(CLASS_NAME_SHOW) || context._hoverState === HOVER_STATE_SHOW) {\n      context._hoverState = HOVER_STATE_SHOW\n      return\n    }\n\n    clearTimeout(context._timeout)\n\n    context._hoverState = HOVER_STATE_SHOW\n\n    if (!context.config.delay || !context.config.delay.show) {\n      context.show()\n      return\n    }\n\n    context._timeout = setTimeout(() => {\n      if (context._hoverState === HOVER_STATE_SHOW) {\n        context.show()\n      }\n    }, context.config.delay.show)\n  }\n\n  _leave(event, context) {\n    const dataKey = this.constructor.DATA_KEY\n    context = context || $(event.currentTarget).data(dataKey)\n\n    if (!context) {\n      context = new this.constructor(\n        event.currentTarget,\n        this._getDelegateConfig()\n      )\n      $(event.currentTarget).data(dataKey, context)\n    }\n\n    if (event) {\n      context._activeTrigger[\n        event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER\n      ] = false\n    }\n\n    if (context._isWithActiveTrigger()) {\n      return\n    }\n\n    clearTimeout(context._timeout)\n\n    context._hoverState = HOVER_STATE_OUT\n\n    if (!context.config.delay || !context.config.delay.hide) {\n      context.hide()\n      return\n    }\n\n    context._timeout = setTimeout(() => {\n      if (context._hoverState === HOVER_STATE_OUT) {\n        context.hide()\n      }\n    }, context.config.delay.hide)\n  }\n\n  _isWithActiveTrigger() {\n    for (const trigger in this._activeTrigger) {\n      if (this._activeTrigger[trigger]) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  _getConfig(config) {\n    const dataAttributes = $(this.element).data()\n\n    Object.keys(dataAttributes)\n      .forEach(dataAttr => {\n        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {\n          delete dataAttributes[dataAttr]\n        }\n      })\n\n    config = {\n      ...this.constructor.Default,\n      ...dataAttributes,\n      ...(typeof config === 'object' && config ? config : {})\n    }\n\n    if (typeof config.delay === 'number') {\n      config.delay = {\n        show: config.delay,\n        hide: config.delay\n      }\n    }\n\n    if (typeof config.title === 'number') {\n      config.title = config.title.toString()\n    }\n\n    if (typeof config.content === 'number') {\n      config.content = config.content.toString()\n    }\n\n    Util.typeCheckConfig(\n      NAME,\n      config,\n      this.constructor.DefaultType\n    )\n\n    if (config.sanitize) {\n      config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn)\n    }\n\n    return config\n  }\n\n  _getDelegateConfig() {\n    const config = {}\n\n    if (this.config) {\n      for (const key in this.config) {\n        if (this.constructor.Default[key] !== this.config[key]) {\n          config[key] = this.config[key]\n        }\n      }\n    }\n\n    return config\n  }\n\n  _cleanTipClass() {\n    const $tip = $(this.getTipElement())\n    const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX)\n    if (tabClass !== null && tabClass.length) {\n      $tip.removeClass(tabClass.join(''))\n    }\n  }\n\n  _handlePopperPlacementChange(popperData) {\n    this.tip = popperData.instance.popper\n    this._cleanTipClass()\n    this.addAttachmentClass(this._getAttachment(popperData.placement))\n  }\n\n  _fixTransition() {\n    const tip = this.getTipElement()\n    const initConfigAnimation = this.config.animation\n\n    if (tip.getAttribute('x-placement') !== null) {\n      return\n    }\n\n    $(tip).removeClass(CLASS_NAME_FADE)\n    this.config.animation = false\n    this.hide()\n    this.show()\n    this.config.animation = initConfigAnimation\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      const $element = $(this)\n      let data = $element.data(DATA_KEY)\n      const _config = typeof config === 'object' && config\n\n      if (!data && /dispose|hide/.test(config)) {\n        return\n      }\n\n      if (!data) {\n        data = new Tooltip(this, _config)\n        $element.data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Tooltip._jQueryInterface\n$.fn[NAME].Constructor = Tooltip\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Tooltip._jQueryInterface\n}\n\nexport default Tooltip\n", "/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Tooltip from './tooltip'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'popover'\nconst VERSION = '4.6.0'\nconst DATA_KEY = 'bs.popover'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst CLASS_PREFIX = 'bs-popover'\nconst BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\n\nconst Default = {\n  ...Tooltip.Default,\n  placement: 'right',\n  trigger: 'click',\n  content: '',\n  template: '<div class=\"popover\" role=\"tooltip\">' +\n              '<div class=\"arrow\"></div>' +\n              '<h3 class=\"popover-header\"></h3>' +\n              '<div class=\"popover-body\"></div></div>'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content: '(string|element|function)'\n}\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\nconst SELECTOR_TITLE = '.popover-header'\nconst SELECTOR_CONTENT = '.popover-body'\n\nconst Event = {\n  HIDE: `hide${EVENT_KEY}`,\n  HIDDEN: `hidden${EVENT_KEY}`,\n  SHOW: `show${EVENT_KEY}`,\n  SHOWN: `shown${EVENT_KEY}`,\n  INSERTED: `inserted${EVENT_KEY}`,\n  CLICK: `click${EVENT_KEY}`,\n  FOCUSIN: `focusin${EVENT_KEY}`,\n  FOCUSOUT: `focusout${EVENT_KEY}`,\n  MOUSEENTER: `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE: `mouseleave${EVENT_KEY}`\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Popover extends Tooltip {\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Overrides\n\n  isWithContent() {\n    return this.getTitle() || this._getContent()\n  }\n\n  addAttachmentClass(attachment) {\n    $(this.getTipElement()).addClass(`${CLASS_PREFIX}-${attachment}`)\n  }\n\n  getTipElement() {\n    this.tip = this.tip || $(this.config.template)[0]\n    return this.tip\n  }\n\n  setContent() {\n    const $tip = $(this.getTipElement())\n\n    // We use append for html objects to maintain js events\n    this.setElementContent($tip.find(SELECTOR_TITLE), this.getTitle())\n    let content = this._getContent()\n    if (typeof content === 'function') {\n      content = content.call(this.element)\n    }\n\n    this.setElementContent($tip.find(SELECTOR_CONTENT), content)\n\n    $tip.removeClass(`${CLASS_NAME_FADE} ${CLASS_NAME_SHOW}`)\n  }\n\n  // Private\n\n  _getContent() {\n    return this.element.getAttribute('data-content') ||\n      this.config.content\n  }\n\n  _cleanTipClass() {\n    const $tip = $(this.getTipElement())\n    const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX)\n    if (tabClass !== null && tabClass.length > 0) {\n      $tip.removeClass(tabClass.join(''))\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = typeof config === 'object' ? config : null\n\n      if (!data && /dispose|hide/.test(config)) {\n        return\n      }\n\n      if (!data) {\n        data = new Popover(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Popover._jQueryInterface\n$.fn[NAME].Constructor = Popover\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Popover._jQueryInterface\n}\n\nexport default Popover\n", "export default require(\"./node_modules/bootstrap/js/dist/popover.js\");"],
  "mappings": "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",
  "names": []
}
